{
    "contents" : "# analysis ophi data\n\n\n# code model, genotype encoded as categorical variable -------------------------\n\n# stepAIC \nlibrary(MASS)\n# load data\nophi_code <- read.csv(\"data/ophi_code.csv\", colClasses = c(rep(\"numeric\",2),rep(\"factor\",98)))\nophi_add <- read.csv(\"data/ophi_add.csv\")\nophi_het <- read.csv(\"data/ophi_het.csv\")\n\n# create empty complete table\ncomplete_table <- data.frame(matrix(NA, nrow=100, ncol=5))\nnames(complete_table) <- c(\"Estimate\", \"Deviance Explained\", \"F\", \"P (F-test)\", \"P (Chisquared-test)\")\n\n# model selection code----------------------------------------------------------\n# modelfit code\nmod_code <- glm(day_falling ~., data = ophi_code)\n\n## AIC backward stepwise ##\nmod_aic_code <- stepAIC(mod_code, direction = \"backward\")\n# final aic model variables data frame\ndf_aic_code <- model.frame(mod_aic_code)\n\n# get deletion test table\nlibrary(minmodelr)\ncode_aic_table <- DelTestVar(df_aic_code)\n# fill in complete SNP table\nfulltab_code_aic <- complete_table\nrow.names(fulltab_code_aic) <- names(ophi_code)\nfulltab_code_aic[row.names(code_aic_table), ] <- code_aic_table\n\n\n## stepwise regression (crawley) ##\nmod_crawley_code <- MinMod(ophi_code)\ndf_crawley_code <- mod_crawley_code[[1]]\ncode_crawley_table <- DelTestVar(df_crawley_code)\n\n# fill in complete SNP table\nfulltab_code_crawley <- complete_table\nrow.names(fulltab_code_crawley) <- names(ophi_code)\nfulltab_code_crawley[row.names(code_crawley_table), ] <- code_crawley_table\n\n\n# model selection additive------------------------------------------------------\n# modelfit add\nmod_add <- glm(day_falling ~., data = ophi_add)\n\n## AIC backward stepwise ##\nmod_aic_add <- stepAIC(mod_add, direction = \"backward\")\n# final aic model variables data frame\ndf_aic_add <- model.frame(mod_aic_add)\n\n# get deletion test table\nlibrary(minmodelr)\nadd_aic_table <- DelTestVar(df_aic_add)\n# fill in complete SNP table\nfulltab_add_aic <- data.frame(matrix(NA, nrow=100, ncol=5),\n                               row.names = names(ophi_add))\nnames(fulltab_add_aic) <- names(add_aic_table)\nfulltab_add_aic[row.names(add_aic_table), ] <- add_aic_table\n\n\n## stepwise regression (crawley) ##\nmod_crawley_add <- MinMod(ophi_add)\ndf_crawley_add <- mod_crawley_add[[1]]\nadd_crawley_table <- DelTestVar(df_crawley_add)\n\n# fill in complete SNP table\nfulltab_add_crawley <- complete_table\nrow.names(fulltab_add_crawley) <- names(ophi_add)\nfulltab_add_crawley[row.names(add_crawley_table), ] <- add_crawley_table\n\n# model selection het------------------------------------------------------\n# modelfit het\nmod_het <- glm(day_falling ~., data = ophi_het)\n\n## AIC backward stepwise ##\nmod_aic_het <- stepAIC(mod_het, direction = \"backward\")\n# final aic model variables data frame\ndf_aic_het <- model.frame(mod_aic_het)\n\n# get deletion test table\nlibrary(minmodelr)\nhet_aic_table <- DelTestVar(df_aic_het)\n# fill in complete SNP table\nfulltab_het_aic <- data.frame(matrix(NA, nrow=100, ncol=5),\n                              row.names = names(ophi_het))\nnames(fulltab_het_aic) <- names(het_aic_table)\nfulltab_het_aic[row.names(het_aic_table), ] <- het_aic_table\n\n\n## stepwise regression (crawley) ##\nmod_crawley_het <- MinMod(ophi_het)\ndf_crawley_het <- mod_crawley_het[[1]]\nhet_crawley_table <- DelTestVar(df_crawley_het)\n\n# fill in complete SNP table\nfulltab_het_crawley <- complete_table\nrow.names(fulltab_het_crawley) <- names(ophi_het)\nfulltab_het_crawley[row.names(het_crawley_table), ] <- het_crawley_table\n\n\n\n\nlibrary(broom)\ntest <- tidy(mod_aic_code)\n\n\n",
    "created" : 1420325269746.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "2463412603",
    "id" : "D69B9C1C",
    "lastKnownWriteTime" : 1421006026,
    "path" : "C:/Users/Martin/Studium/projects/ophionotus/main_analysis.R",
    "project_path" : "main_analysis.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "type" : "r_source"
}