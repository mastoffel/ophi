{
    "contents" : "# best subsets selection\n\n# ophi as numeric\nophi_code <- read.table(\"./data/Ophionotus_GLM_4.txt\", \n                        colClasses = c(rep(\"numeric\",2),rep(\"factor\",98)), \n                        header = TRUE, row.names = NULL)\n\nophi_add <-  read.table(\"./data/Ophionotus_GLM_4.txt\", \n                        colClasses = c(rep(\"numeric\",100)), \n                        header = TRUE, row.names = NULL)\nophi_add[, 3:ncol(ophi_add)] <- ophi_add[, 3:ncol(ophi_add)] - 2\n\n\nophi_het <- read.csv(\"./data/joedata.csv\",\n                     colClasses = c(rep(\"numeric\",2),rep(\"numeric\",98)), \n                     header = TRUE)\n\nophi_het[, 2] <- ophi_code$disc_size\nnames(ophi_het)[2] <- \"disc_size\"\n\n# find best subsets for each size\nlibrary(leaps)\nregfit.full <- regsubsets(day_falling ~., ophi_het, method = \"backward\", nvmax = 99)\nreg.summary <- summary(regfit.full)\n\n# plotting \npar(mfrow = c(2,2))\nplot(reg.summary$rss, xlab = \"Number of Variables\", ylab = \"RSS\", type = \"l\")\nplot(reg.summary$adjr2, xlab = \"Number of Variables\", ylab = \"Adjusted RSq\", type = \"l\")\nwhich.max(reg.summary$adjr2)\npoints(39, reg.summary$adjr2[39], col = \"red\", cex = 2, pch = 20)\nplot(reg.summary$cp, xlab = \"Number of Variables\", ylab = \"Mallows Cp\", type = \"l\")\nwhich.min(reg.summary$cp)\npoints(16, reg.summary$cp[16], col = \"red\", cex=2, pch = 20)\nwhich.min(reg.summary$bic)\nplot(reg.summary$bic, xlab = \"Number of Variables\", ylab = \"BIC\", type = \"l\")\npoints(1, reg.summary$bic[1], col = \"red\", cex = 2, pch = 20)\n# title(\"Best subsets for the additive model\", outer = TRUE)\n\n# cross validation\n\nset.seed(1)\ntrain <-  sample(c(TRUE,FALSE), nrow(ophi_het), rep = TRUE, prob = c(0.5,0.5))\ntest <- (!train)\n\n# apply regsubsets to the training set\n\nregfit.best <- regsubsets(day_falling ~. ,data = ophi_het[train, ], nvmax = 99,\n                          method = \"backward\", really.big = TRUE)\n\ntest.mat <- model.matrix(day_falling ~. , data = ophi_het[test, ])\n\n# loop over each best subset\n\nval.errors <- rep(NA, 99)\nfor ( i in 1:99) {\n        coefi <- coef(regfit.best, id = i)\n        pred <- test.mat[, names(coefi)] %*% coefi\n        val.errors[i] <- mean((ophi_het$day_falling[test]-pred)^2)\n}\nplot(val.errors)\n\n# writing own predict method\n\npredict.regsubsets <- function(object, newdata, id, ...) {\n        form <- as.formula(object$call[[2]])\n        mat <- model.matrix(form, newdata)\n        coefi <- coef(object, id = id) \n        xvars <- names(coefi)\n        mat[, xvars] %*% coefi\n}\n\n\n# regsubsets with full model\nregfit.best <- regsubsets(day_falling ~. ,data = ophi_het, nvmax = 98, method = \"backward\")\ncoef(regfit.best, 4) # exactly the crawley model\n\nk <- 10\nset.seed(1)\nfolds <- sample(1:k, nrow(ophi_het), replace = TRUE)\ncv.errors <- matrix(NA, k, 98, dimnames=list(NULL, paste(1:98)))\n\n# cross validation\nfor(j in 1:k) {\n        best.fit <- regsubsets(day_falling ~. , data = ophi_het[folds!=j, ], nvmax = 98, method = \"backward\")\n        \n        for (i in 1:98) {\n                pred = predict.regsubsets(best.fit, ophi_het[folds == j, ], id = i)\n                cv.errors[j, i] <- mean((ophi_het$day_falling[folds==j] - pred)^2)\n        }\n}\n\nmean.cv.errors <- apply(cv.errors, 2, mean)\nplot(mean.cv.errors, xlab=\"best subset size\")\n",
    "created" : 1424269801677.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "103373340",
    "id" : "3EE7213B",
    "lastKnownWriteTime" : 1416173562,
    "path" : "C:/Users/Martin/Studium/projects/ophionotus/best-subsets.R",
    "project_path" : "best-subsets.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 13,
    "source_on_save" : false,
    "type" : "r_source"
}