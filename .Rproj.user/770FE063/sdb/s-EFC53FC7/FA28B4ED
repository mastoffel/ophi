{
    "contents" : "# non-parametric bootstrapping on the full data set with subsequent stepAIC\nlibrary(dplyr)\n# load first 10 000\nall_names <- tbl_df(read.table(\"data/server/all_names_08.txt\",  stringsAsFactors = FALSE))\n# second 10 000\nall_names_2 <- tbl_df(read.table(\"data/server/all_names_08_2.txt\", stringsAsFactors = FALSE))\nall_names <- rbind(all_names, all_names_2)\n\n# create vector\nnames_vec <- as.character(unlist(all_names))\n# sort\ntab_names <- sort(table(names_vec), decreasing = TRUE)\ntab_names <- tab_names[2:length(tab_names)]\n# delete day_falling\nsnps <- names(tab_names)\n# logical for occuring in model\nin_mod <- snps %in% names(df_aic_code)\n# data frame\nsnp_df <- data.frame(names = (1:length(tab_names)), \n                     freq = unname(tab_names)/20000, row.names = 1:length(tab_names),\n                     mod = as.numeric(in_mod),\n                     stringsAsFactors = FALSE)\nsnp_df$mod <- factor(snp_df$mod, levels = rev(levels(factor(snp_df$mod))))\n\n# theme\nlibrary(ggplot2)\nlibrary(grid)\ntheme_dens <- theme_minimal() +\n        theme(strip.text.x = element_text(vjust=1,size = 18),\n              #strip.background = element_rect(fill=\"white\",linetype=\"blank\"),\n              axis.title.x = element_text(vjust= -2,size = 16),\n              axis.title.y = element_text(vjust= 3,size = 16),\n              axis.text.x = element_text(size = 12),\n              axis.text.y = element_text(size = 12),\n              plot.margin = unit(c(2,2,2,2), \"cm\"), # less margin on down side\n              # axis.line = element_line(size=1),\n              # panel.border = element_blank() ,\n              panel.grid.major = element_blank(),\n              # axis.line = element_line(color = 'black'),\n              panel.grid.minor = element_blank(),\n              panel.border = element_rect(colour=\"black\",fill=NA,size=1),\n              legend.text = element_text(size = 12),\n              legend.title = element_text(size = 12, face = \"plain\"))\n\nggplot(data = snp_df, aes(x = names, y = freq, fill = factor(mod))) +\n        geom_bar(color = \"black\", size = 0.1, width=1, stat=\"identity\") + #(colour=\"white\"\n        theme_dens +\n        scale_x_continuous(limits = c(0.5, 100),\n                           expand = c(0, 0), \n                           breaks = c(seq(from = 0, to = 100, by = 10))) +\n        scale_y_continuous(limits = c(0, 1),\n                           expand = c(0, 0),\n                           breaks = c(seq(from = 0, to = 1, by = 0.2))) +\n        scale_fill_manual(name=\"Final Model\",\n                          values = c(\"black\", \"#f7f7f7\"), ##636363\n                          labels=c(\"Included\", \"Excluded\")) +\n        #theme(panel.border = element_blank(),\n              #axis.line = element_line(color = 'black')) +\n        theme(legend.position=c(0.85, 0.8)) +\n                           # breaks = c(seq(from = 0, to = 0.05, by = 0.01))) +\n        xlab(\"SNP\") +\n        ylab(\"Frequency\")\nggsave(filename = \"Subsamp.jpg\", width = 7, height = 5, units = \"in\")  \nggsave(filename = \"Subsamp.pdf\", width = 7, height = 5, units = \"in\")       \n\n\nlibrary(ggvis)\nsnp_df %>% \n        ggvis(~names, ~freq) %>%\n        layer_bars(fill = mod) %>%\n        layer_bars(~freq[names == 1])\n\nlibrary(ggplot2)\nqplot(x = names, y = freq, data=snp_df, geom=\"bar\", fill=factor(mod))\n",
    "created" : 1422882654634.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "1892710652",
    "id" : "FA28B4ED",
    "lastKnownWriteTime" : 1423149549,
    "path" : "C:/Users/Martin/Studium/projects/ophionotus/subsampling_plot.R",
    "project_path" : "subsampling_plot.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "type" : "r_source"
}